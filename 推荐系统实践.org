#+TITLE: 推荐系统实践
#+AUTHOR: wyj
#+EMAIL: rs@whu.edu.cn
#+KEYWORDS: notes, data mining
#+OPTIONS: H:3 toc:t ^:{}
#+STYLE: <link rel="stylesheet" type="text/css" href="./style/style.css" />

* 第1章 好的推荐系统
** 什么是推荐系统
   1) 社会化推荐
   2) 基于内容的推荐
   3) 基于协同过滤的推荐
   *推荐算法的本质是通过一定的方式将用户和物品联系起来*
** 个性化推荐系统的应用
   几乎所有的推荐系统应用都是由前台的展示页面、后台的日志系统以及推荐算法系统3部分构成的
*** 电子商务
*** 电影和视频网站
*** 个性化音乐网络电台
*** 社交网络
*** 个性化阅读
*** 基于位置的服务
*** 个性化邮件
*** 个性化广告
    1) 上下文广告：和网页内容相关的广告
    2) 搜索广告：和用户目的相关的广告
    3) 个性化展示广告
** 推荐系统评测
   *预测准确度是推荐系统领域的最重要指标*
   好的推荐系统不仅仅能够准确预测用户的行为，而且能够扩展用户的视野，帮助用户发现那些他们可能会感兴趣，但却不那么容易发现的东西
*** 推荐系统实验方法
**** 离线实验
     步骤：
     1) 通过日志系统获取用户行为数据，并按照一定格式生成一个标准的数据集
     2) 将数据集按照一定的规则分成训练集和测试集
     3) 在训练集上训练用户兴趣模型，在测试集上进行预测
     4) 通过事先定义的离线指标评测算法评测在测试集上的预测结果
     | 优点                       | 缺点                             |
     |----------------------------+----------------------------------|
     | 不需要有对实际系统的控制权 | 无法计算商业上关心的指标         |
     | 不需要用户参与实验         | 离线实验的指标和商业指标存在差距 |
     | 速度快，可以测试大量算法   |                                  |
**** 用户调查
     #+BEGIN_VERSE
     因为上线测试具有较高的风险，所以需要用户调查
     #+END_VERSE
     测试用户的选择：
     1. 尽量保证测试用户的分布和真实用户的分布相同
     2. 尽量保证是双盲实验
     | 优点                               | 缺点                 |
     |------------------------------------+----------------------|
     | 可以获得很多体现用户主观感受的指标 | 招募测试用户代价较大 |
     | 相对在线实验风险很低，出错后易弥补 | 很难组织大规模的测试用户，会使测试结果的统计意义不足 |
**** 在线实验
     *AB测试*
     | 优点                                     | 缺点                                           |
     |------------------------------------------+------------------------------------------------|
     | 可以公平获得不同算法实际在线时的性能指标 | 周期较长，必须进行长期的实验才能得到可靠的结果 |
     要点：
     1. 不会用AB测试测试所有的算法，而只是用它测试那些在离线实验和用户调查中表现很好的算法
     2. 切分流量是AB测试中的关键，不同的层以及控制这些层的团队需要从一个统一的地方获得自己AB测试的流量
     3. 不同层之间的流量应该是正交的
     一般说来，一个新的推荐算法最终上线，需要完成上面所说的3个实验：
     1. 通过离线实验证明它在很多离线指标上优于现有的算法
     2. 通过用户调查确定它的用户满意度不低于现有的算法
     3. 通过在线的AB测试确定它在我们关心的指标上优于现有的算法     
*** 评测指标
**** 用户满意度
     #+BEGIN_VERSE
     是推荐系统的 *最重要指标*
     度量方法：购买率、反馈按钮、点击率、用户停留时间、转化率
     #+END_VERSE    
**** 预测准确度
     #+BEGIN_VERSE
     推荐系统 *离线评测指标* 最重要的指标
     #+END_VERSE
     计算方法：
     1. 需要有一个离线的数据集，该数据集包含用户的历史行为记录
     2. 将该数据集通过时间分成训练集和测试集
     3. 在训练集上建立用户行为和兴趣模型预测用户在测试集上的行为
     4. 计算预测行为和测试集上实际行为的重合度作为预测准确度
***** 评分预测
      均方根误差(RMSE) 平均绝对误差(MAE)
***** TopN推荐(给用户一个个性化的推荐列表)
      准确率(precision) 召回率(recall)
***** 关于评分预测和TopN推荐的讨论
**** 覆盖率
     #+BEGIN_VERSE
     覆盖率描述推荐系统对物品长尾的发掘能力
     覆盖率是一个内容提供商会关心的指标
     用信息熵和基尼系数两个指标来定义覆盖率
     #+END_VERSE
**** 多样性
     #+BEGIN_VERSE
     为了满足用户广泛的兴趣，推荐列表需要能够覆盖用户不同的兴趣领域，即推荐结果需要具有多样性
     多样性描述了推荐列表中物品两两之间的不相似性，因此，多样性和相似性是对应的
     #+END_VERSE
**** 新颖性
     #+BEGIN_VERSE
     新颖性是指给用户推荐那些他们以前没有听过说的物品
     实现新颖性的最简单办法是，把那些用户之前在网站中对其有过行为的物品从推荐列表中过滤掉
     评测新颖度的最简单方法是利用推荐结果的平均流行度，因为越不热门的物品越可能让用户觉得新颖
     #+END_VERSE
**** 惊喜度
     #+BEGIN_VERSE
     如果推荐结果和用户的历史兴趣不相似，但却让用户觉得满意，那么就可以说推荐结果的惊喜度很高，
     而推荐的新颖性仅仅取决于用户是否听说过这个推荐结果
     #+END_VERSE
**** 信任度
     提供推荐系统的信任度主要有两种方法：
     1. 需要增加推荐系统的透明度，而增加透明度的主要办法是提供推荐解释
     2. 考虑用户的社交网络信息，利用用户的好友信息给用户做推荐，并且用好友进行推荐解释
**** 实时性
     实时性包括两个方面：
     1. 需要实时地更新推荐列表来满足用户新的行为变化
     2. 需要能够将新加入系统的物品推荐给用户
**** 健壮性
     #+BEGIN_VERSE
     算法健壮性的评测主要利用模拟攻击
     设计推荐系统时尽量使用代价比较高的用户行为
     在使用数据前，进行攻击检测，从而对数据进行清理
     #+END_VERSE
**** 商业指标
**** 总结
     在给定覆盖率、多样性、新颖性等限制条件下，尽量优化预测准确度(作者看法)
*** 评测维度
    增加评测维度的目的就是知道一个算法在什么情况下性能最好

    评测维度分为如下3种
    1. 用户维度
    2. 物品维度
    3. 时间维度
* 第2章 利用用户行为数据
  基于用户行为分析的推荐算法也称为协同过滤算法
** 用户行为数据简介
   #+BEGIN_VERSE
   用户行为数据在网站上最简单的存在形式就是日志
   用户行为一般分两种：
   1. 显性反馈行为：用户明确表示对物品喜好的行为
   2. 隐性反馈行为：不能明确反应用户喜好的行为
   #+END_VERSE
   | user id           | 产生行为的用户的唯一标识                                                                         |
   | item id           | 产生行为的对象的唯一标识                                                                         |
   | behaviour type    | 行为的种类(比如是购买还是浏览)                                                                   |
   | context           | 产生行为的上下文，包括时间和地点等                                                               |
   | behaviour weight  | 行为的权重(如果是观看视频的行为，那么这个权重可以是观看时长；如果是打分行为，这个权重可以是分数) |
   | behaviour content | 行为的内容(如果是评论行为，那么就是评论的文本；如果是打标签的行为，就是标签)                     |
** 用户行为分析
*** 用户活跃度和物品流行度的分布
    长尾分布
*** 用户活跃度和物品流行度的关系
    用户越活跃，越倾向于浏览冷门的物品
** 实验设计和算法评测
*** 数据集
*** 实验设计
    1. 将用户行为数据集按照均匀分布随机分成M份，挑选一份作为测试集，将剩下的M-1份作为训练集
    2. 在训练集上建立用户兴趣模型，并在测试集上对用户行为进行预测，统计出相应的评测指标
    3. 为了保证评测指标并不是过拟合的结果，需要进行M次实验，并且每次都使用不同的测试集
    4. 将M次实验测出的评测指标的平均值作为最终的评测指标
*** 评测指标
    #+BEGIN_VERSE
    召回率描述有多少比例的用户-物品评分记录包含在最终的推荐列表中
    准确率描述最终的推荐列表中有多少比例是发生过的用户-物品评分记录
    覆盖率越高，说明推荐算法越能够将长尾中的物品推荐给用户
    #+END_VERSE
** 基于邻域的算法
*** 基于用户的协同过滤算法
**** 基础算法
     步骤：
     1. 找到和目标用户兴趣相似的用户集合(关键：计算两个用户的兴趣相似度)
     2. 找到这个集合中的用户喜欢的，且目标用户没有听说过的物品推荐给目标用户

     参数K(和user兴趣最相似的K个用户)是UserCF的一个重要参数，它的调整对推荐算法的各种指标都会产生一定的影响
**** 用户相似度计算的改进
     两个用户对冷门物品采取过同样的行为更能说明他们兴趣的相似度
**** 实际在线系统使用UserCF的例子
     最著名的使用者是Digg
*** 基于物品的协同过滤算法
**** 基础算法
     UserCF的缺点：     
     1. 运算时间复杂度和空间复杂度的增长和用户数的增长近似与平方关系
     2. 很难对推荐结果作出解释

     步骤：
     1. 计算物品之间的相似度
     2. 根据物品的相似度和用户的历史行为给用户生成推荐列表

     在协同过滤中两个物品产生相似度是因为它们共同被很多用户喜欢，也就是说每个用户都可以通过他们的历史兴趣列表给物品“贡献”相似度

     ItemCF的一个优势是可以提供推荐解释，即利用用户历史上喜欢的物品为现在的推荐结果进行解释
**** 用户活跃度对物品相似度的影响
     John S.Breese认为活跃用户对物品相似度的贡献应该小于不活跃的用户
**** 物品相似度的归一化
     归一化的好处不仅仅在于增加推荐的准确度，它还以提高推荐的覆盖率和多样性
*** UserCF和ItemCF的综合比较
    UserCF的推荐结果着重于反映和用户兴趣相似的小群体的热点，而ItemCF的推荐结果着重于维护用户的历史兴趣。
    换句话说，UserCF的推荐更社会化，反映了用户所在的小型兴趣群体中物品的热门程度，而ItemCF的推荐更加个性化，反映了用户自己的兴趣传承
    |      | UserCF                                                         | ItemCF                                                                           |
    | 性能 | 适用于用户较少的场合，如果用户很多，计算用户相似度矩阵代价很大 | 适用于物品数明显小于用户数的场合，如果物品很多(网页)，计算无平相似度矩阵代价很大 |
    | 领域 | 时效性较强，用户个性化兴趣不太明显的领域                       | 长尾物品丰富，用户个性化需求强烈的领域                                           |
    | 实时性 | 用户有新行为，不一定造成推荐结果的立即变化                     | 用户有新行为，一定会导致推荐结果的实时变化                                       |
    | 冷启动 | 1. 在新用户对很少的物品产生行为后，不能立即对他进行个性化推荐，因为用户相似度表是每隔一段时间离线计算的 | 1. 新用户只要对一个物品产生行为，就可以给他推荐和该物品相关的其他物品            |
    |        | 2. 新物品上线一段时间，一旦有用户对物品产生行为，就可以将新物品推荐给和对它产生行为的用户兴趣相似的其他用户 | 2. 没有办法在不离线更新物品相似度表的情况下将新物品推荐给用户                    |
    | 推荐理由 | 很难提供令用户信服的推荐解释                                                                                | 利用用户的历史行为给用户做推荐解释，可以令用户比较信服                           |
**** 哈利波特问题
     两个不同领域的最热门物品之间往往具有比较高的相似度
** 隐语义模型   
*** 基础算法
    它的核心思想是通过隐含特征(latent factor)联系用户兴趣和物品

    隐含语义分析技术采取基于用户行为统计的自动聚类
*** 基于LFM的实际系统的例子
    雅虎首页个性化

    LFM模型在实际使用中有一个困难，那就是它很难实现实时的推荐
*** LFM和基于邻域的方法的比较
    1. 理论基础
    2. 离线计算的空间复杂度
    3. 离线计算的时间复杂度
    4. 在线实时推荐
    5. 推荐解释
** 基于图的模型
*** 用户行为数据的二分图表示
*** 基于图的推荐算法
    如果将个性化推荐算法放到二分图模型上，那么给用户u推荐物品的任务就可以转化为度量用户顶点V_{u}和与V_{u}没有边直接相连的物品节点在图上的相关性，
    相关性越高的物品在推荐列表中的权重就越高

    图中顶点的相关性主要取决于3个因素：
    1. 两个顶点之间的路径数
    2. 两个顶点之间路径的长度
    3. 两个顶点之间的路径经过的顶点

    相关性高的一对顶点一般具有如下特征：
    1. 两个顶点之间有很多路径相连
    2. 连接两个顶点之间的路径长度都比较短
    3. 连接两个顶点之间的路径不会经过出度比较大的顶点
* 第3章 推荐系统冷启动问题
  冷启动问题：如何在没有大量用户数据的情况下设计个性化推荐系统并且让用户满意
** 冷启动问题简介
   主要分3类：
   1. 用户冷启动
   2. 物品冷启动
   3. 系统冷启动
** 利用用户注册信息
   用户的注册信息分3种：
   1. 人口统计学信息
   2. 用户兴趣的描述
   3. 从其他网站导入的用户站外行为数据

   基于注册信息的个性化推荐流程：
   1. 获取用户的注册信息
   2. 根据用户的注册信息对用户分类
   3. 给用户推荐他所属分类中用户喜欢的物品
** 选择合适的物品启动用户的兴趣
   能够用来启动用户兴趣的物品有如下特点：
   1. 比较热门
   2. 具有代表性和区分性
   3. 启动物品集合需要有多样性
** 利用物品的内容信息
   物品的内容可以通过向量空间模型表示，该模型会将物品表示成一个关键词向量

   如何建立文章、话题和关键词的关系是话题模型(topic model)研究的重点
** 发挥专家的作用
* 第4章 利用用户标签数据
  3种方式联系用户兴趣和物品：
  1. 利用用户喜欢过的物品
  2. 利用和用户兴趣相似的其他用户
  3. 通过一些特征(属性集合、隐语义向量、标签)联系用户和物品
** UGC标签系统的代表应用
   标签系统的最大优势在于可以发挥群体的智能，获得对物品内容信息比较准确的关键词描述
*** Delicious
*** CiteULike
*** Last.fm
*** 豆瓣
*** Hulu
** 标签系统中的推荐问题
   主要有两个：
   1. 如何利用用户打标签的行为为其 *推荐物品* (基于标签的推荐)
   2. 如何在用户给物品打标签时为其 *推荐适合该物品的标签* (标签推荐)
*** 用户为什么进行标注
*** 用户如何打标签
*** 用户打什么样的标签
    Delicious的标签种类：
    1. 表明物品是什么
    2. 表明物品的种类
    3. 表明谁拥有物品
    4. 表达用户的观点
    5. 用户相关的标签
    6. 用户的任务
** 基于标签的推荐系统
*** 实验设置
*** 一个最简单的算法
    1. 统计每个用户最常用的标签
    2. 对于每个标签，统计被打过这个标签次数最多的物品
    3. 对于每一个用户，首先找到他常用的标签，然后找到具有这些标签的最热门物品推荐给这个用户
*** 算法的改进
**** TF-IDF
     适当惩罚热门标签和热门物品，在增进推荐结果个性化的同时并不会降低推荐结果的离线精度
**** 数据稀疏性
     对标签集合做扩展

     标签扩展的本质是对每个标签找到和它相似的标签，也就是计算标签之间的相似度
**** 标签清理
     标签清理的另一个重要意义在于将标签作为推荐解释

     对标签的质量要求：
     1. 标签不能包含没有意义的停止词或者表示情绪的词
     2. 推荐解释里不能包含很多意义相同的词语

     标签清理方法：
     1. 去除词频很高的停止词
     2. 去除因词根不同造成的同义词
     3. 去除因分隔符造成的同义词
*** 基于图的推荐算法
*** 基于标签的推荐解释
    基于标签的最大好处是可以利用标签做推荐解释
** 给用户推荐标签
*** 为什么要给用户推荐标签
    1. 方便用户输入标签
    2. 提高标签质量
*** 如何给用户推荐标签
    1. popular_tags
    2. item_popular_tags
    3. user_popular_tags
    4. hybrid_popular_tags
*** 实验设置
*** 基于图的标签推荐算法
** 扩展阅读
* 第5章 利用上下文信息
** 时间上下文信息
*** 时间效应简介
    1. 用户兴趣是变化的
    2. 物品也是有生命周期的
    3. 季节效应
*** 时间效应举例
*** 系统时间特性的分析
    通过统计如下信息研究系统的时间特性：
    1. 每天独立用户数的增长情况
    2. 系统的物品变化情况
    3. 用户访问情况
**** 数据集的选择
**** 物品的生存周期和系统的时效性
     1. 物品平均在线天数

	如果一个物品在某天被至少一个用户产生过行为，就定义该物品在这一天在线。因此可以通过物品的平均在线天数度量一类物品的生存周期
     2. 相隔T天系统物品流行度向量的平均相似度
*** 推荐系统的实时性
    实现推荐系统的实时性除了对用户行为的存取有实时性要求，还要求推荐算法本身具有实时性
*** 推荐算法的时间多样性
    时间多样性：推荐系统每天推荐结果的变化程度

    如何在不损失精度的情况下提高推荐结果的时间多样性
    
    提高推荐结果的时间多样性需要分两步解决：
    1. 保证推荐系统能够在用户有了新的行为后及时调整推荐结果，使推荐结果满足用户最近的兴趣
    2. 保证推荐系统在用户没有新的行为时也能够经常变化一下结果，具有一定的时间多样性

    如果用户没有行为，保证给用户的推荐结果具有一定的时间多样性思路：
    1. 在生成推荐结果时加入一定的随机性
    2. 记录用户每天看到的推荐结果，然后在每天给用户进行推荐时，对他前几天看到过很多次的推荐结果进行适当地降权
    3. 每天给用户使用不同的推荐算法
*** 时间上下文推荐算法
    1. 最近最热门
    2. 时间上下文相关的ItemCF算法
    3. 时间上下文相关的UserCF算法
*** 时间段图模型
*** 离线实验
** 地点上下文信息
** 扩展阅读
* 第6章 利用社交网络数据 
** 获取社交网络数据的途径
*** 电子邮件
*** 用户注册信息
*** 用户的位置数据
*** 论坛和讨论组
*** 即使聊天工具
*** 社交网站
    社交网站的另一个好处是自然地减轻了信息过载问题

    社交图谱(Facebook) 兴趣图谱(twitter)
** 社交网络数据简介
   #+BEGIN_VERSE
   在Facebook这种社交网络上可以用 *无向边* 连接有社交网络关系的用户
   在twitter上可以用 *有向边* 代表社交网络上的用户关系
   #+END_VERSE
   3种不同的社交网络数据：
   1. 双向确认的社交网络数据
   2. 单向关注的社交网络数据
   3. 基于社区的社交网络数据
** 基于社交网络的推荐
   社会化推荐优点：
   1. 好友推荐可以增加推荐的信任度
   2. 社交网络可以解决冷启动问题

   缺点：很多时候并不一定能提高推荐算法的离线精度(准确率和召回率)
*** 基于邻域的社会化推荐算法
    最简单的算法是给用户推荐好友喜欢的物品集合

    熟悉度可以用用户之间的共同好友比例来度量
*** 基于图的社会化推荐算法
*** 实际系统中的社会化推荐算法
*** 社会化推荐系统和协同过滤推荐系统
    社会化推荐的优势不在于增加预测准确度，而是在于通过用户的好友增加用户对推荐结果的信任度，从而让用户单击那些很冷门的推荐结果
*** 信息流推荐
    信息流的个性化推荐要解决的问题就是如何进一步帮助用户从信息墙上挑选有用的信息
** 给用户推荐好友
   好友推荐系统的目的是根据用户现有的好友、用户的行为记录给用户推荐新的好友，从而增加整个社交网络的稠密程度和社交网站用户的活跃度
*** 基于内容的匹配
    1. 用户人口统计学属性
    2. 用户的兴趣
    3. 用户的位置信息
*** 基于共同兴趣的好友推荐
*** 基于社交网络图的好友推荐
    #+BEGIN_VERSE
    w_{out}
    w_{in}
    w_{out,in}
    w'_{out, in}
    #+END_VERSE      
*** 基于用户调查的好友推荐算法对比
** 扩展阅读
   *六度原理*

   很多对社交网络的研究都是基于 *随机图理论* 的

   社交网络研究中两个最著名的问题：
   1. 如何度量人的重要性，即社交网络顶点的中心度
   2. 如何度量社交网络中人和人之间的关系，即链接预测
* 第7章 推荐系统实例
** 外围架构
   如何存取用户行为数据是推荐系统需要解决的首要问题

   需要实时存取的数据存储在数据库和缓存中，而大规模的非实时地存取数据存储在分布式文件系统中
** 推荐系统架构
   基于特征的推荐系统架构的核心任务有两部分：
   1. 如何为给定用户生成特征
   2. 如何根据特征找到物品

   特征种类：
   1. 人口统计学特征
   2. 用户的行为特征
   3. 用户的话题特征

   如果把各种特征和任务都统筹考虑，则推荐系统将会非常复杂，而且很难通过配置文件方便地配置不同特征和任务的权重。
   因此，推荐系统需要由多个推荐引擎组成，每个推荐引擎负责一类特征和一种任务，而推荐系统的任务只是将推荐引擎的结果按照一定权重或者优先级合并、排序然后返回

   使用推荐引擎的好处：
   1. 可以方便地增加/删除引擎，控制不同引擎对推荐结果的影响
   2. 可以实现推荐引擎级别的用户反馈
** 推荐引擎的架构
*** 生成用户特征向量
    一个特征向量由特征以及特征的权重组成，在利用用户行为计算特征向量时需要考虑以下因素：
    1. 用户行为的种类
       一般的标准就是用户付出代价越大的行为权重越高
    2. 用户行为产生的时间
    3. 用户行为的次数
    4. 物品的热门程度
*** 特征-物品相关推荐
*** 过滤模块
    1. 用户已经产生过行为的物品
    2. 候选物品以外的物品
    3. 某些质量很差的物品
*** 排名模块
**** 新颖性排名
**** 多样性
     提高多样性的方法：
     1. 将推荐结果按照某种物品的内容属性分成几类，然后在某个类中都选择该类中排名最高的物品组合成最终的推荐列表
     2. 让推荐结果尽量来自不同的特征，具有不同的推荐理由，而不是所有的推荐结果都对应一个理由
**** 时间多样性
**** 用户反馈
     是排名模块最重要的部分
** 扩展阅读
* 第8章 评分预测问题
  评分预测问题就是如何通过已知的用户历史评分记录预测未知的用户评分记录
** 离线实验方法
** 评分预测算法
*** 平均值
**** 全局平均值
**** 用户评分平均值
**** 物品评分平均值
**** 用户分类对物品分类的平均值
*** 基于邻域的方法
*** 隐语义模型与矩阵分解模型
    在推荐系统邻域，提的最多的就是隐语义模型和矩阵分解模型。其实，这两个名词说的是一回事，就是如何通过降维的方法将评分矩阵补全
**** 传统的SVD分解
     对矩阵扰动最小：如果补全后矩阵的特征值和补全之前矩阵的特征值相差不大，就算是扰动比较小

     最早的矩阵分解模型就是从数学上的SVD(奇异值分解)开始的
**** Simon Funk的SVD分解
**** 加入偏置项后的LFM
**** 考虑邻域影响的LFM
*** 加入时间信息
**** 基于邻域的模型融合时间信息
**** 基于矩阵分解的模型融合时间信息
*** 模型融合
**** 模型级联融合
**** 模型加权融合
*** Netflix Prize的相关实验结果
